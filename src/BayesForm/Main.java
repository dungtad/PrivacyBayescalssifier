/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package BayesForm;

import bayesclassPrivacy.*;
import bayesclassPrivacy.Crypto;
import bayesclassPrivacy.Bayesian;
import DBConnection.DBConnect;
import DBConnection.tadDAO;
import DBConnection.tad;
import java.math.BigInteger;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MANHKHUC
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://192.168.124.99/TAD";
    //  Database credentials
    static final String USER = "tad";
    static final String PASS = "123456";

    static String tableDB[][] = new String[10000][5];
    static int[][] DTBplay, DTBnoplay;
    static int[] CountDPlay, CountDnoPlay;
    static BigInteger x[][] = new BigInteger[10000][10];
    static BigInteger y[][] = new BigInteger[10000][10];
    static BigInteger m[] = new BigInteger[100000];
    static BigInteger h[] = new BigInteger[100000];
    static double d[][] = new double[10000][10];
    static BigInteger r = new BigInteger("1");
    static BigInteger r1 = new BigInteger("1");
    static BigInteger[][] m0, m1, h0, h1;
    static BigInteger P,g;
    static BigInteger X[][] = new BigInteger[10000][5];
    static BigInteger Y[][] = new BigInteger[10000][5];
    static BigInteger[] Xsum, X0sum, X1sum;
    static BigInteger[] Ysum, Y0sum, Y1sum;
    static int countU,countU1 = 0;
    static int NumReC,NumColumn,bitlength; //NumReC= Number Records = countU
    static double NumPlay,NumNoPlay;
    static double prob[][] = new double[4][2];
    static double prob1[][] = new double[4][2];
    static double pp;
    static double npp;
    static int flag = 0;
    static int flag1 = 0;
    static double play_N = 1;
    static double notplay_N = 1;
    private DefaultTableModel model;

    public Main() {
        initComponents();
        model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Outlook");
        model.addColumn("Temperature");
        model.addColumn("Humidity");
        model.addColumn("Windy");
        model.addColumn("Class");
        jTable1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        Encrypt_Button = new javax.swing.JButton();
        Decrypt_Button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Box_Outlook = new javax.swing.JComboBox();
        Box_Temperature = new javax.swing.JComboBox();
        Box_Humidity = new javax.swing.JComboBox();
        Box_Windy = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        Result_TextArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        Key_length_CCB = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Show_detail = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(159, 13, 742, 159);

        jButton1.setText("Generate Key");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(12, 13, 104, 49);

        jTextField1.setText("R");
        jPanel2.add(jTextField1);
        jTextField1.setBounds(159, 272, 103, 22);

        jTextField2.setText("H");
        jPanel2.add(jTextField2);
        jTextField2.setBounds(366, 272, 96, 22);

        jTextField3.setText("P");
        jPanel2.add(jTextField3);
        jTextField3.setBounds(556, 272, 99, 22);

        jTextField4.setText("F");
        jPanel2.add(jTextField4);
        jTextField4.setBounds(762, 272, 94, 22);

        Encrypt_Button.setText("Encryption");
        jPanel2.add(Encrypt_Button);
        Encrypt_Button.setBounds(12, 80, 104, 53);
        Encrypt_Button.getAccessibleContext().setAccessibleDescription("");

        Decrypt_Button.setText("Decryption");
        jPanel2.add(Decrypt_Button);
        Decrypt_Button.setBounds(12, 151, 104, 51);

        jLabel1.setText("Temperature:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(366, 190, 80, 24);

        jLabel2.setText("Outlook: ");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(159, 194, 52, 16);

        jLabel3.setText("Humidity:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(556, 194, 54, 16);

        jLabel4.setText("Windy:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(762, 194, 40, 16);

        Box_Outlook.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Rain=R", "Sunny=S", "Overcast=O" }));
        Box_Outlook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Box_OutlookActionPerformed(evt);
            }
        });
        jPanel2.add(Box_Outlook);
        Box_Outlook.setBounds(159, 232, 95, 22);

        Box_Temperature.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hot=H", "Mild=M", "Cool=C" }));
        Box_Temperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Box_TemperatureActionPerformed(evt);
            }
        });
        jPanel2.add(Box_Temperature);
        Box_Temperature.setBounds(366, 232, 69, 22);

        Box_Humidity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Peak=P", "Normal=N" }));
        Box_Humidity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Box_HumidityActionPerformed(evt);
            }
        });
        jPanel2.add(Box_Humidity);
        Box_Humidity.setBounds(556, 232, 85, 22);

        Box_Windy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "False=F", "True=T" }));
        Box_Windy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Box_WindyActionPerformed(evt);
            }
        });
        jPanel2.add(Box_Windy);
        Box_Windy.setBounds(762, 232, 73, 22);

        Result_TextArea.setColumns(20);
        Result_TextArea.setRows(5);
        jScrollPane2.setViewportView(Result_TextArea);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(159, 318, 742, 110);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 19)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        jLabel6.setText("KEY LENGTH");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(12, 215, 116, 28);

        Key_length_CCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "128", "256", "512", "1024" }));
        jPanel2.add(Key_length_CCB);
        Key_length_CCB.setBounds(34, 250, 65, 33);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zKMA_image/KMA_ACT.JPG"))); // NOI18N
        jPanel2.add(jLabel7);
        jLabel7.setBounds(10, 310, 140, 100);

        jTabbedPane1.addTab("Privacy Bayesclassifier", jPanel2);

        jButton2.setText("Public key X");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Public key Y");

        jButton4.setText("m[i]");

        Show_detail.setColumns(20);
        Show_detail.setRows(5);
        jScrollPane3.setViewportView(Show_detail);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Outlook", "Temperature", "Humidity", "Windy" }));

        jButton5.setText("h[i]");

        jTextField5.setText("1");

        jLabel5.setText("U'i");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jTextField5)))
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(4, 4, 4)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Detail Protocol", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        StringBuffer s = new StringBuffer();
        for (int i = 0; i < NumColumn; ++i) {

                s.append("\nYsum["+i+"] "+Ysum[i]);

            }
        
        Show_detail.setText(""+s);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Box_WindyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Box_WindyActionPerformed
        // TODO add your handling code here:
        if (Box_Windy.getSelectedIndex() == 0){
            jTextField4.setText("T");
        }
        else if (Box_Windy.getSelectedIndex() == 1){
            jTextField4.setText("F");
        }
    }//GEN-LAST:event_Box_WindyActionPerformed

    private void Box_HumidityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Box_HumidityActionPerformed
        // TODO add your handling code here:
        if (Box_Humidity.getSelectedIndex() == 0){
            jTextField3.setText("P");
        }
        else if (Box_Humidity.getSelectedIndex() == 1){
            jTextField3.setText("N");
        }
    }//GEN-LAST:event_Box_HumidityActionPerformed

    private void Box_TemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Box_TemperatureActionPerformed
        // TODO add your handling code here:
        if (Box_Temperature.getSelectedIndex() == 0){
            jTextField2.setText("H");
        }
        else if (Box_Temperature.getSelectedIndex() == 1){
            jTextField2.setText("M");
        }
        else if (Box_Temperature.getSelectedIndex() == 2){
            jTextField2.setText("C");
        }
    }//GEN-LAST:event_Box_TemperatureActionPerformed

    private void Box_OutlookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Box_OutlookActionPerformed
        // TODO add your handling code here:
        if (Box_Outlook.getSelectedIndex() == 0){
            jTextField1.setText("S");
        }
        else if (Box_Outlook.getSelectedIndex() == 1){
            jTextField1.setText("O");
        }
        else if (Box_Outlook.getSelectedIndex() == 2){
            jTextField1.setText("R");
        }
    }//GEN-LAST:event_Box_OutlookActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        List<tad> list = new ArrayList<tad>();
        list = tadDAO.ListTad();
        countU1 = 0;
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        for (tad t : list) {
            model.addRow(new String[]{t.getId() + "", t.getOutlook(), t.getTemperature(), t.getHumidity(), t.getWindy(), t.getClasses()});
            countU1 ++;
        }
        Runnable runnable = new Runnable() {

            @Override
            public void run() {
                //        Connection conn = null;
                Statement stmt = null;
                NumColumn = 5;
                bitlength = Integer.valueOf(""+Key_length_CCB.getSelectedItem());
                Xsum = Crypto.DefaultONE(Xsum, NumColumn);
                Ysum = Crypto.DefaultONE(Ysum, NumColumn);
                g = Crypto.RandomBigInt(bitlength);
                Random rnd1 = new Random();
                P = BigInteger.probablePrime(bitlength,rnd1);

                Result_TextArea.setText("Generate g = "+g+"\nPrime P = "+ P+"\nGenerate Key = "+ bitlength+ "\n\t\tDONE!");
              
                try {
                    //STEP 2: Register JDBC driver

                    //            conn = DBConnect.openConnection("tad", "123456");
                    ResultSet rs = tadDAO.ListRs();
                    //STEP 5: Extract data from result set
                    System.out.println("Table\n"+ countU1);
                    System.out.println("ID\t   Outlook\t   Temperature\t    Humidity\t      Windy     \tClass");

                    while (rs.next()) {
                        //Retrieve by column name
                        for (int i = 0; i < 5; ++i) {
                            x[countU][i] = Crypto.RandomBigInt(bitlength);
                            y[countU][i] = Crypto.RandomBigInt(bitlength);
                            X[countU][i] = g.modPow(x[countU][i],P);
                            Y[countU][i] = g.modPow(y[countU][i],P);
                            Xsum[i] = Xsum[i].multiply(X[countU][i]);
                            Ysum[i] = Ysum[i].multiply(Y[countU][i]);
                            
                            

                        }
                        
                        int id = rs.getInt("id");
                        tableDB[countU][0]  = rs.getString("Outlook");
                        tableDB[countU][1]  = rs.getString("Temperature");
                        tableDB[countU][2] = rs.getString("Humidity");
                        tableDB[countU][3]  = rs.getString("Windy");
                        tableDB[countU][4]  = rs.getString("Class");
                        System.out.print(id + "\t\t" + tableDB[countU][0] + "\t\t" + tableDB[countU][1] + "\t\t" + tableDB[countU][2] + "\t\t" + tableDB[countU][3] + "\t\t" + tableDB[countU][4]);
                        System.out.println();
                        ++countU;

                    }
                    //STEP 6: Clean-up environment
                    rs.close();
                    //}

                //            conn.close();
            } catch (SQLException se) {
                //Handle errors for JDBC
                se.printStackTrace();
            } catch (Exception e) {
                //Handle errors for Class.forName
                e.printStackTrace();
            } finally {
                //finally block used to close resources
                try {
                    if (stmt != null) {
                        stmt.close();
                    }
                } catch (SQLException se2) {
                }// nothing we can do
                //            try {
                    //                if (conn != null) {
                        //                    conn.close();
                        //                }
                    //            } catch (SQLException se) {
                    //                se.printStackTrace();
                    //            }//end finally try
            }//end try
            System.out.println("Goodbye!");
            //close database
            NumReC = countU; //NumReC= Number Records = 14 in this case

            System.out.println("Goodbye!" + NumReC);
            System.out.println("Menu:\nOutlook: Sunny=S Overcast=O Rain=R\tTemperature: Hot=H Mild=M Cool=C\n");
            System.out.println("Humidity: Peak=P Normal=N\t\tWindy: True=T False=F\n\nYour input should belong to one of these classes.\n");
            System.out.println("class1: Play=P   class2:Not Play=NP");
            Scanner scr = new Scanner(System.in);
            System.out.println("\nEnter your input: example. t={rain,hot,peak,false} input will be R,H,P,F");
            String ch;
            String S[] = new String[9];
            /*for (int i = 0; i < 4; ++i) {
                System.out.println("Nhap gia trị " + (i + 1));
                S[i] = scr.nextLine();
            }*/
            S[0]=jTextField1.getText();
            S[1]=jTextField2.getText();
            S[2]=jTextField3.getText();
            S[3]=jTextField4.getText();

            System.out.println("Nhap gia trị "+jTextField1.getText()+ jTextField2.getText()+jTextField3.getText()+jTextField4.getText());

            //count class P and N
            DTBplay = Bayesian.Count_D(tableDB, S, "P", NumColumn, NumReC);
            DTBnoplay = Bayesian.Count_D(tableDB, S, "N", NumColumn, NumReC);
            // Encrypt with class = Play
            m0 = Crypto.EcryptionDM(DTBplay, Xsum, y, g,P, NumColumn, NumReC);
            h0 = Crypto.EcryptionDH(DTBplay, Ysum, x, g,P, NumColumn, NumReC);
            CountDPlay = Crypto.DecryptionHM(m0, h0, g,P, NumColumn, NumReC);

            //Encrypt with class = No
            m1 = Crypto.EcryptionDM(DTBnoplay, Xsum, y, g,P, NumColumn, NumReC);
            h1 = Crypto.EcryptionDH(DTBnoplay, Ysum, x, g,P, NumColumn, NumReC);
            CountDnoPlay = Crypto.DecryptionHM(m1, h1, g,P, NumColumn, NumReC);

            for (int i = 0; i < 14; ++i) {
                for (int j = 0; j < 5; ++j) {
                    //System.out.println("h[ "+i+j+ "] "+DTBplay[i][j] );
                    System.out.print("\nm " + m0[i][j]);
                }
                System.out.println();
            }

            //--------------------

            NumPlay = (double) CountDPlay[4];
            NumNoPlay = (double) CountDnoPlay[4];
            pp = (double) NumPlay / NumReC;
            npp = (double) NumNoPlay / NumReC;

            for (int i = 0; i < 4; ++i) {

                prob[i][0] = CountDPlay[i] / NumPlay;
                prob[i][1] = CountDnoPlay[i] / NumNoPlay;
                System.out.println(" count99=" + i + "  ky tu99 =" + CountDPlay[i] + "  prob99[" + i + "][0]=" + prob[i][0] + "  prob99[i][1]=" + prob[i][1]);

            }

            cal_N(1);
            cal_N(2);

            double pt = play_N + notplay_N;
            System.out.println("play_N+notplay_N :" + play_N + "+" + notplay_N);
            System.out.println("pt =" + pt);
            double prob_of_play = 0;
            double prob_of_noplay = 0;

            prob_of_play = play_N / pt;
            prob_of_noplay = notplay_N / pt;

            System.out.println("\nProbability of play " + prob_of_play);
            System.out.println("\nProbability of NO play " + prob_of_noplay);

            if (prob_of_play > prob_of_noplay) {
                System.out.println("\nThe new tuple classified under \"PLAY\" category.Hence there will be play!!!");
            } else {
                System.out.println("\nThe new tuple classified under \"NO PLAY\" category.Hence there will be NO play.");
            }

        }

        };
        new Thread(runnable).start();
    }//GEN-LAST:event_jButton1ActionPerformed
    
 
            static void cal_N(int a) {
                if (a == 1) {
                    for (int i = 0; i < 4; ++i) {
                        play_N *= prob[i][0];
                    }
                    System.out.println("\n11Value of N of play \n" + play_N);
                    play_N *= pp;
                    System.out.println("\nValue of N of play \n" + play_N);
                } else {
                    for (int i = 0; i < 4; ++i) {
                        notplay_N *= prob[i][1];
                    }
                    System.out.println("\n11Value of N of play \n" + play_N);
                    notplay_N *= npp;
                    System.out.println("\nValue of N of No play \n" + notplay_N);
                }

            }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
       // new Main().setVisible(true);
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
            */
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Box_Humidity;
    private javax.swing.JComboBox Box_Outlook;
    private javax.swing.JComboBox Box_Temperature;
    private javax.swing.JComboBox Box_Windy;
    private javax.swing.JButton Decrypt_Button;
    private javax.swing.JButton Encrypt_Button;
    private javax.swing.JComboBox Key_length_CCB;
    private javax.swing.JTextArea Result_TextArea;
    private javax.swing.JTextArea Show_detail;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
